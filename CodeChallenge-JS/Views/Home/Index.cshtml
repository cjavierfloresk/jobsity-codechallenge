@model List<CodeChallenge_JS.Models.Message>
@{
    ViewBag.Title = "Chat Room";
}

<style>
    #discussion {
        background-color: white;
        height: 300px;
        overflow-y: auto;
    }
</style>
<br />
<br />
<div class="row">
    <div class="container">
        <div id="discussion">
            @foreach (var m in Model)
            {
               <div class="message"><b>@m.UserName</b>: &nbsp;&nbsp;@m.Text</div><br />
            }

        </div>
        <input type="text" style="width:80%" id="message" />
        <input type="button" id="sendmessage" value="Send" />
        <input type="hidden" id="displayname" />
    </div>
</div>

@section Scripts{
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.1.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--Add script to update the page and send messages.-->
    <script type="text/javascript">
        $(function () {
            // Declare a proxy to reference the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.broadcastMessage = function (name, message) {
                // Html encode display name and message.
                var encodedName = $('<div />').text(name).html();
                var encodedMsg = $('<div />').text(message).html();
                if ($('.message').length > 50) {
                    $('.message')[0].remove();
                }
                // Add the message to the page.
                $('#discussion').append('<div class="message"><b>' + encodedName + '</b>:&nbsp;&nbsp;' + encodedMsg + '</b></div><br />');
                $("#discussion").animate({ scrollTop: $("#discussion").prop("scrollHeight") }, 300);
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val('@User.Identity.Name');
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    //check bot call
                    var message = $('#message').val();
                    if ($.trim(message) === "") return;

                    if (message.startsWith("/stock")) {
                        if (message.split('=').length < 2) {
                            $('#discussion').append('<div class="message" style="color:red"><b>Invalid bot call, please use /stock=stock_key</b></div><br />');
                            $("#discussion").animate({ scrollTop: $("#discussion").prop("scrollHeight") }, 300);
                            return;
                        }

                        $('#discussion').append('<div class="botcalling"><i>Calling bot... please wait</i><br />');
                        $("#discussion").animate({ scrollTop: $("#discussion").prop("scrollHeight") }, 300);
                        $.post('@Url.Action("BotCall", "Home")', { key: message.split('=')[1] }, function (ret) {
                            chat.server.send('BOT', $('#displayname').val() + ' - ' + message + ' - ' + ret);
                            $('.botcalling').remove();
                        });
                    }
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });

            $("#discussion").animate({ scrollTop: $("#discussion").prop("scrollHeight") }, 0);
        });
    </script>
}